#!/bin/sh
PATH=/bin:/sbin:/usr/bin:/usr/sbin
export PATH
export DEBIAN_FRONTEND="noninteractive"
dpkg -i /mnt/machine-emulator-tools-v0.15.0.deb
date -s '2023-12-02 00:00:00'
/opt/cartesi/bin/rndaddentropy < /opt/cartesi/bin/rndaddentropy
mkdir -p /
cat > /opt/cartesi/bin/preinit << EOF
#!/bin/sh
/opt/cartesi/bin/rndaddentropy < /opt/cartesi/var/run/random-seed
if [ x\$CARTESI_SCRATCH != x ]; then
  mkfs.ext4 -F -F -O ^has_journal \$CARTESI_SCRATCH
  /usr/bin/mount \$CARTESI_SCRATCH /ram
else
  /bin/echo "/ram size configured as: \$CARTESI_TMPFS_SIZE"
  /usr/bin/mount -t tmpfs -o size=\$CARTESI_TMPFS_SIZE tmpfs /ram
fi
# move all to ram
/bin/echo "Moving dynamic content to tmpfs or scratch ..." 
/usr/bin/cp -ar /tmp /ram
/usr/bin/cp -ar /var /ram
/usr/bin/cp -ar /etc /ram
/usr/bin/cp -ar /opt /ram
/usr/bin/cp -ar /home /ram
/usr/bin/cp -ar /root /ram
/usr/bin/mount --bind /ram/tmp /tmp
/usr/bin/mount --bind /ram/var /var
/usr/bin/mount --bind /ram/etc /etc
/usr/bin/mount --bind /ram/opt /opt
/usr/bin/mount --bind /ram/home /home
/usr/bin/mount --bind /ram/root /root
exec /sbin/init
EOF
# /tmpfs for RWA demo backwards compatiblity
mkdir -p /ram /opt /tmpfs 
mkdir -p /opt/cartesi/dapp
chmod +x /opt/cartesi/bin/preinit
cat > /opt/cartesi/bin/run-app.sh << EOF
#!/bin/bash
export IPFS_PATH=/root/.ipfs
export HTTP_DATASTORE_URL=http://127.0.0.1:5004/ipfs
export IO_DEVICE=/dev/pmem1
mkdir -p /opt/rollup-store
mkdir -p /opt/rollup-cache
/usr/bin/ipfs init /etc/ipfs-config
/usr/bin/ipfs daemon --offline &
echo "Waiting for IPFS"
IPFS_HOST="127.0.0.1"
IPFS_PORT="5001"

while true; do
	nc -z "\$IPFS_HOST" "\$IPFS_PORT"
        RET=\$?
        echo \$RET
        if [ x\$RET = x0 ]; then
           break
        fi
        sleep 1
done
echo "IPFS up"
echo "Asking for app to guest tools which would set CID of /app"
curl http://127.0.0.1:5004/get_app > /dev/null
ipfs files read /app/boot-script > /tmp/boot-script
chmod +x /tmp/boot-script
cat /tmp/boot-script
/tmp/boot-script
EOF
chmod +x /opt/cartesi/bin/run-app.sh
cat > /opt/cartesi/bin/yield-and-install << EOF
#!/bin/bash
	if [ ! -e /dev/cmio ]; then
		echo "No /dev/cmio"
		mkdir -p /tmp/instructions
		mount -t 9p -o trans=virtio instructions /tmp/instructions -oversion=9p2000.L
		/tmp/instructions/boot-script
		exit 0
	fi
	mkdir -p /opt/rollup-cache
	mkdir -p /opt/rollup-store
	export IO_DEVICE=/dev/pmem1
	/opt/cartesi/bin/rollup-init /opt/cartesi/bin/run-app.sh

	echo "entrypoint exited with \$? status"
	dmesg
	halt -f
	exit 0
EOF

chmod +x /opt/cartesi/bin/yield-and-install

cat > /etc/systemd/system/yield-and-install.service << EOF
[Unit]
Description=First yield
After=network.target

[Service]
Type=oneshot
ExecStart=/opt/cartesi/bin/yield-and-install
RemainAfterExit=yes
[Install]
WantedBy=multi-user.target
EOF

systemctl enable yield-and-install.service
cp /mnt/ipfs /usr/bin/ipfs
chmod a+x /usr/bin/ipfs
cp /mnt/ipfs-config /etc/ipfs-config

echo -n "root:cartesi" | chpasswd
printf "deb [check-valid-until=no] file:/mnt/mirror/snapshot.ubuntu.com/ubuntu/20231201T000000Z jammy main restricted universe multiverse\ndeb [check-valid-until=no] file:/mnt/mirror/snapshot.ubuntu.com/ubuntu/20231201T000000Z jammy-updates main restricted universe multiverse" > /etc/apt/sources.list
apt-get update
apt-get install --no-install-recommends -y containerd curl busybox strace fuse3 jq

rm -rf /var/lib/apt/lists/*
apt-get clean
